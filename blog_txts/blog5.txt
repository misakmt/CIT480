Sharing files from one machine to another is always a necessity at some point in time. If you do not want to or do not have the ability of sharing things through hardware or the internet, you can make use of your LAN to do so. The simplest way is to secure copy (scp) files and directories through ssh. SCP is a very useful tool for one time transfers, but sometimes becomes tedious to type out the command and path without error.

The two examples below show the ways you can send or import files from another machine:
	• scp ~/Document/Localfile remoteuser@remotemachine:~/Desktop
	• scp remoteuser@remotemachine:~/Destkop/remotefile ~/Desktop
	• *Tip* For directories, you will have to use -r

Fortunately, there are similar protocols to use which are easier, faster, and yet just as secure. This protocol is known as FTP. However, the original FTP or TFTP methods are not meant for secure transfers, but speed instead. Luckily vsftp was created with added security measures. You can either use VSFTPD with SSL also known as FTPS, which changes port numbers through all transfers/listings or you can use SFTP which makes use of the secure port 22 (which SSH uses).

For this blog we will go through the steps of installing VSFTP and how you can make use of it through the web, cli, or gui.

1) Of course first step is to always update first.
	(If you're on a red hat machine, use yum instead)
	• sudo su
	• apt-get update
	• apt-get upgrade

2) Install VSFTPD
	• apt-get install vsftpd
	• apt-get install openssl

3) Generate SSL certificate and RSA private key, then set the paths of these files in our
   vsftpd configuration file.
	• openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout \
	• /etc/vsftpd/vsftpd.pem -out /etc/vsftpd/vsftpd.pem

4) Edit config file.
   On red hat systems it will be located in: /etc/vsftpd/vsftpd.conf
   On Debian based systems: /etc/vsftpd.conf
	Step 1)
	• ssl_enable=YES
	• allow_anon_ssl=NO
	• force_local_data_ssl=YES
	• force_local_logins_ssl=YES
	
	Step 2)
	• local_enable=YES
	• anonymous_enable=NO
	• write_enable=YES
	• chroot_local_user=YES

	Step 3)
	• xferlog_enable=YES
	• xferlog_std_format=YES
	• xferlog_file=/var/log/ftp/xferlog

5) You can optionally add users to a chroot list and then add the path of the chroot list 
   to the configuration	file.
	• vim /etc/vsftpd.chroot_list

6) Add users
	• user add user1
	• passwd password

7) Restart the service and make sure it starts on boot
	• systemctl enable vsftpd.service
	• systemctl restart vsftpd.service
			or
	• /etc/init.d/vsftpd/ restart

You can now go ahead and try out accessing/transferring files:
An easy way to check is to try logging on through a browser: ftp://YourLocalIPaddress
You can even download an FTP client such as FileZilla or Transmit (Mac only). Some paid versions will also allow you to connect DropBox, Azure, Google Drive, AWS S3 Bucket, and more...


	



